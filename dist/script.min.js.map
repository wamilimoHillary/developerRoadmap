{"version":3,"sources":["script.js"],"names":["menuBtn","document","getElementById","nav","toggleDarkMode","classList","toggle","addEventListener","contains","innerHTML","textElement","texts","textIndex","charIndex","typingSpeed","erasingSpeed","delayBetweenTexts","type","setTimeout","erase","length","textContent","charAt","substring","nextImage","images","currentIndex","prevImage","imgElement","src"],"mappings":"aAAA,IAAMA,QAAUC,SAASC,eAAe,YAC1BC,IAAMF,SAASC,eAAe,UAD5BD,eAASC,SAAeA,eAAxC,oBAeQ,SAASE,iBAAAA,SAAAA,KAAiBC,UAAAC,OAAA,aAV1BN,QAAQO,iBAAiB,QAAS,WAA1BA,IAAAA,UAAiBD,OAAzB,QACkBA,IAAAA,UAAdE,SAAA,QAEIR,QAAQS,UAAY,UAAZA,QAAYA,UAAW,YAWvCR,SAASC,eAAe,oBAAoBK,iBAAiB,QAASH,gBAGhEM,IAAAA,YAAuBR,SAAAA,eAAe,eAExCS,MAAA,CAeAC,uCACAC,+BACEC,+BAdF,2CAeEC,0CAbF,mCAcEC,+CAZF,6CAcKC,uCACDJ,+CACAH,wDACAG,2CACAK,4CAGHN,UAAA,EACJC,UAAA,EAZKC,YAAc,GAcpBC,aAAiB,GACTF,kBAAe,IAEfA,SAASI,OACEE,UAAOJ,MAARH,WAAVQ,QACGV,YAAAW,aAAAV,MAAAC,WAAAU,OAAAT,WACSA,YACDI,WAAMH,KAAjBA,cAEPI,WAAAC,MAAAH,mBAMD,SAAAG,QAdoB,EAAZN,WAeQH,YAAAW,YAAAV,MAAgCC,WAAAW,UAAqB,EAAAV,UAAA,GACrEA,YAbQK,WAAWC,MAAOJ,gBAElBH,WAAaA,UAAY,GAAKD,MAAMS,OAenCI,WAAYP,KAAAH,cAVrBb,SAASM,iBAAiB,mBAAoB,WAahCW,WAAOO,KAAOC,eAI5B,IAASC,OAAY,CAAA,+BAAA,oBAAA,oBAAA,oBAAA,oBAAA,iBAVjBD,aAAe,EAafE,SAAAJ,YACH,IAAAI,EAAA3B,SAAAC,eAAA,SATGwB,cAAgBA,aAAe,GAAKD,OAAOL,OAC3CQ,EAAWC,IAAMJ,OAAOC,cAI5B,SAASC,YACL,IAAMC,EAAa3B,SAASC,eAAe,SAC3CwB,cAAgBA,aAAe,EAAID,OAAOL,QAAUK,OAAOL,OAC3DQ,EAAWC,IAAMJ,OAAOC","file":"script.min.js","sourcesContent":["const menuBtn = document.getElementById('menu-btn');\r\n        const nav = document.getElementById('navbar');\r\n        const toggleDarkmode = document.getElementById('toggle-dark-mode');\r\n\r\n        // Toggle navigation menu on small screens\r\n        menuBtn.addEventListener('click', () => {\r\n            nav.classList.toggle('show');\r\n            if (nav.classList.contains('show')) {\r\n                menuBtn.innerHTML = '&times;'; // Change to times icon\r\n            } else {\r\n                menuBtn.innerHTML = '&#9776;'; // Change back to hamburger icon\r\n            }\r\n        });\r\n\r\n        // Toggle dark mode\r\n        function toggleDarkMode() {\r\n            document.body.classList.toggle('dark-mode');\r\n        }\r\n            \r\n        document.getElementById('toggle-dark-mode').addEventListener('click', toggleDarkMode);\r\n\r\n        // Simple typewriter effect\r\n        const textElement = document.getElementById('typing-text');\r\n        const texts = [\r\n            \"Welcome to Dr.Wamilimo DEV Roadmap😂\",\r\n            \"Step 1: Learn HTML & CSS 🖥️\",\r\n            \"Step 2: Master JavaScript 📝\",\r\n            \"Step 3: Dive into Frontend Frameworks 🚀\",\r\n            \"Step 4: Explore Backend Development 🗄️\",\r\n            \"Step 5: Understand Databases 🗃️\",\r\n            \"Step 6: Get Familiar with Version Control 🧩\",\r\n            \"Step 7: Build Projects and Portfolio 🏗️💪\",\r\n            \"Step 8: Learn Deployment & DevOps 🌐\",\r\n            \"Step 9: Stay Updated with Industry Trends 📈\",\r\n            \"Step 10: Collaborate and Contribute to Open Source 🤝\",\r\n            \"Step 11: Master AI and the Internet 🤖🌐\",\r\n            \"Step 12: Get a Client or Get Employed 💼\",\r\n        ];\r\n        \r\n        let textIndex = 0;\r\n        let charIndex = 0;\r\n        const typingSpeed = 80; // typing speed in milliseconds\r\n        const erasingSpeed = 20; // erasing speed in milliseconds\r\n        const delayBetweenTexts = 2000; // delay between texts in milliseconds\r\n\r\n        function type() {\r\n            if (charIndex < texts[textIndex].length) {\r\n                textElement.textContent += texts[textIndex].charAt(charIndex);\r\n                charIndex++;\r\n                setTimeout(type, typingSpeed);\r\n            } else {\r\n                setTimeout(erase, delayBetweenTexts);\r\n            }\r\n        }\r\n\r\n        function erase() {\r\n            if (charIndex > 0) {\r\n                textElement.textContent = texts[textIndex].substring(0, charIndex - 1);\r\n                charIndex--;\r\n                setTimeout(erase, erasingSpeed);\r\n            } else {\r\n                textIndex = (textIndex + 1) % texts.length;\r\n                setTimeout(type, typingSpeed);\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"DOMContentLoaded\", function() {\r\n            setTimeout(type, typingSpeed);\r\n        });\r\n\r\n        // Array containing the paths to the images\r\n        const images = [\"images/elephants.jpg.png.jpg\", \"images/class1.jpg\", \"images/class2.jpg\",\"images/zebra.jpg \" , \"images/pool1.jpg \", \"images/js.png\"]; // Add more image paths as needed\r\n        // Variable to keep track of the current image index\r\n        let currentIndex = 0;\r\n\r\n        // Function to update the image source to the next image in the array\r\n        function nextImage() {\r\n            const imgElement = document.getElementById('image'); // Get the image element by its ID\r\n            currentIndex = (currentIndex + 1) % images.length; // Increment index and wrap around using modulus\r\n            imgElement.src = images[currentIndex]; // Set the src attribute of the image element to the new image path\r\n        }\r\n\r\n        // Function to update the image source to the previous image in the array\r\n        function prevImage() {\r\n            const imgElement = document.getElementById('image'); // Get the image element by its ID\r\n            currentIndex = (currentIndex - 1 + images.length) % images.length; // Decrement index and wrap around using modulus\r\n            imgElement.src = images[currentIndex]; // Set the src attribute of the image element to the new image path\r\n        }"]}